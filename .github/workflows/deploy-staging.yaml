name: Deploy to staging

on:
  repository_dispatch:
    types: [deploy-staging]

jobs:
  deploy-staging:
    name: Deploy to staging environment on repository dispatch
    runs-on: ubuntu-latest

    steps:
    - name: Apply Helm template
      run: |
        helm repo add fdk https://informasjonsforvaltning.github.io/helm-chart/
        helm fetch --untar --untardir ./helm fdk/fdk-nginx-altinn-proxy-mock
        helm template --set DOCKER_IMAGE_NAME="eu.gcr.io/digdir-fdk-infra/fdk-nginx-altinn-proxy-mock:${{ github.event.client_payload.sha }}" \
        -f ./helm/fdk-nginx-altinn-proxy-mock/values/staging.yaml \
        ./helm/fdk-nginx-altinn-proxy-mock/ > ./kubectlapply.yaml
        chmod o+w ./kubectlapply.yaml
        cat kubectlapply.yaml

    - name: Setup gcloud CLI for deploy
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.DIGDIR_FDK_DEV_AUTODEPLOY }}
        export_default_credentials: true

    - name: Deploy to GCP & check status
      run: |
        gcloud container clusters get-credentials digdir-fdk-dev --region europe-north1-a --project digdir-fdk-dev
        kubectl apply -f ./kubectlapply.yaml --force
        if ! kubectl --namespace=staging rollout status deployment fdk-nginx-altinn-proxy-mock; then
          kubectl --namespace=staging rollout undo deployment fdk-nginx-altinn-proxy-mock
          kubectl --namespace=staging rollout status deployment fdk-nginx-altinn-proxy-mock
          exit 1
        fi

    - name: Notify slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        author_name: 'Application: fdk-nginx-altinn-proxy-mock | Environment: staging'
        fields: commit,author,workflow
      env:
        GITHUB_TOKEN: ${{ github.token }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()